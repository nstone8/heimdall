import heimdall.improcessing as imp
import numpy as np

def track_cells(vid_path:str,num_bg,cell_size,min_cell_size=None):
    '''track cells in a video if min_cell_size==None, it will be set to 50% of cell_size'''
    if min_cell_size==None:
        min_cell_size=0.5*cell_size


class Path:
    def __init__(self):
        self.points=[]

class Point:
    def __init__(self,time:int,location:(int,int),velocity:float):
        self.time=time
        self.location=location

    def on_same_path(self,p:'Point'):
        if abs(self.time-p.time)<2 and self.distance_between(p)<velocity:
            return True
        else:
            return False

    def distance_between(self,p:'Point'):
        '''calculate distance between self and p'''
        return np.sqrt(((self.location[0]-p.location[0])**2)+((self.location[1]-p.location[1])**2))
